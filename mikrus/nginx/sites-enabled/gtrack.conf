# /etc/nginx/sites-enabled/gtrack.conf

server {
    # This block handles HTTPS requests.
    server_name gtrack.umat.pl;

    location / {
        # Proxy requests to your application running on port 8000.
        # Since your Nginx is running in host network mode, localhost refers to the VPS itself.
        proxy_pass http://localhost:8000/;

        # Standard proxy headers to pass information to your backend application.
        proxy_http_version 1.1; # Recommended for keepalive connections and other features.
        proxy_set_header Upgrade $http_upgrade; # For WebSocket support.
        proxy_set_header Connection 'upgrade'; # For WebSocket support.
        proxy_set_header Host $host; # Passes the original host header to the backend.
        proxy_set_header X-Real-IP $remote_addr; # Passes the real client IP address.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # List of IPs the request has passed through.
        proxy_set_header X-Forwarded-Proto $scheme; # Passes the original protocol (http or https).
        proxy_cache_bypass $http_upgrade; # Ensures WebSockets are not cached.
    }

    # Optional: If you have static files specific to gtrack.umat.pl that Nginx should serve directly
    # (e.g., CSS, JS, images not handled by your app on port 8000), you can add another location block.
    # Example:
    location /static/ {
        alias /var/www/gtrack/static/; # Make sure this path exists on your VPS
        autoindex on; # Or off, depending on your preference
    }

    # Access and error logs for this specific virtual host.
    # It's good practice to have separate logs per site.
    access_log /var/log/nginx/gtrack.umat.pl.access.log;
    error_log /var/log/nginx/gtrack.umat.pl.error.log;

    listen 443 ssl; # managed by Certbot
    listen [::]:443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/gtrack.umat.pl/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/gtrack.umat.pl/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}



server {
    if ($host = gtrack.umat.pl) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;
    server_name gtrack.umat.pl;
    return 404; # managed by Certbot


}